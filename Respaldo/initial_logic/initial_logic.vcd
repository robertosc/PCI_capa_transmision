$date
	Tue Nov  3 00:13:25 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module banco_initial_logic $end
$var wire 1 ! wr_enable $end
$var wire 1 " reset $end
$var wire 1 # push_vc1 $end
$var wire 1 $ push_vc0 $end
$var wire 1 % pause_vc1 $end
$var wire 1 & pause_vc0 $end
$var wire 6 ' data_out_demux_initial_vc1 [5:0] $end
$var wire 6 ( data_out_demux_initial_vc0 [5:0] $end
$var wire 6 ) data_in [5:0] $end
$var wire 1 * clk $end
$scope module initial_logic1 $end
$var wire 1 ! wr_enable $end
$var wire 1 + valid_pop_out $end
$var wire 1 " reset $end
$var wire 1 # push_vc1 $end
$var wire 1 $ push_vc0 $end
$var wire 1 , pop_main_fifo $end
$var wire 1 % pause_vc1 $end
$var wire 1 & pause_vc0 $end
$var wire 1 - full_fifo $end
$var wire 1 . error $end
$var wire 1 / empty_main_fifo $end
$var wire 6 0 data_out_demux_initial_vc1 [5:0] $end
$var wire 6 1 data_out_demux_initial_vc0 [5:0] $end
$var wire 6 2 data_in_demux_initial [5:0] $end
$var wire 6 3 data_in [5:0] $end
$var wire 1 * clk $end
$var wire 1 4 almost_full_fifo $end
$var wire 1 5 almost_empty_fifo $end
$scope module comb_initial_1 $end
$var wire 1 % pause_vc1 $end
$var wire 1 & pause_vc0 $end
$var wire 1 / empty_main_fifo $end
$var wire 1 * clk $end
$var reg 1 , pop_main_fifo $end
$var reg 1 + valid_pop_out $end
$upscope $end
$scope module demux_initial_1 $end
$var wire 1 + valid_pop_out $end
$var wire 1 " reset $end
$var wire 6 6 data_in_demux_initial [5:0] $end
$var wire 1 * clk $end
$var reg 6 7 data_out_demux_initial_vc0 [5:0] $end
$var reg 6 8 data_out_demux_initial_vc1 [5:0] $end
$var reg 1 $ push_vc0 $end
$var reg 1 # push_vc1 $end
$upscope $end
$scope module fifo_main $end
$var wire 1 , rd_enable $end
$var wire 1 ! wr_enable $end
$var wire 1 " reset $end
$var wire 1 - full_fifo $end
$var wire 1 . error $end
$var wire 1 / empty_fifo $end
$var wire 6 9 data_in [5:0] $end
$var wire 1 * clk $end
$var wire 1 4 almost_full_fifo $end
$var wire 1 5 almost_empty_fifo $end
$var reg 3 : cnt [2:0] $end
$var reg 6 ; data_out [5:0] $end
$var reg 2 < rd_ptr [1:0] $end
$var reg 2 = wr_ptr [1:0] $end
$upscope $end
$upscope $end
$scope module probador_initial_logic_1 $end
$var wire 6 > data_out_demux_initial_vc0 [5:0] $end
$var wire 6 ? data_out_demux_initial_vc1 [5:0] $end
$var wire 1 $ push_vc0 $end
$var wire 1 # push_vc1 $end
$var reg 1 * clk $end
$var reg 6 @ data_in [5:0] $end
$var reg 1 & pause_vc0 $end
$var reg 1 % pause_vc1 $end
$var reg 1 " reset $end
$var reg 1 ! wr_enable $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
05
04
b0 3
b0 2
b0 1
b0 0
1/
0.
0-
0,
0+
1*
b0 )
b0 (
b0 '
x&
x%
0$
0#
0"
0!
$end
#1
0*
#2
1*
#3
0*
#4
1*
#5
0*
#6
0%
0&
b1 )
b1 3
b1 9
b1 @
1"
1!
1*
#7
0*
#8
1+
1,
b1 =
0/
15
b1 :
b10 )
b10 3
b10 9
b10 @
1*
#9
0*
#10
b11 )
b11 3
b11 9
b11 @
1$
b1 <
b1 2
b1 6
b1 ;
b10 =
1*
#11
0*
#12
b11 =
b10 <
b10 2
b10 6
b10 ;
b1 (
b1 1
b1 7
b1 >
b100 )
b100 3
b100 9
b100 @
1*
#13
0*
#14
0+
0,
1%
1&
b10 (
b10 1
b10 7
b10 >
b11 <
b11 2
b11 6
b11 ;
b0 =
1*
#15
0*
#16
b1 =
05
b10 :
0$
b0 (
b0 1
b0 7
b0 >
1*
#17
0*
#18
0!
14
b11 :
b10 =
1*
#19
0*
#20
1*
#21
0*
#22
1*
#23
0*
#24
1*
#25
0*
#26
1*
#27
0*
#28
1*
#29
0*
#30
1*
#31
0*
#32
1*
