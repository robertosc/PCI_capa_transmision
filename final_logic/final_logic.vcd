$date
	Sun Nov  8 12:18:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module banco_final_logic $end
$var wire 1 ! reset_L $end
$var wire 1 " pop_VC1_fifo $end
$var wire 1 # pop_VC0_fifo $end
$var wire 1 $ error_D1 $end
$var wire 1 % error_D0 $end
$var wire 1 & empty_fifo_VC1 $end
$var wire 1 ' empty_fifo_VC0 $end
$var wire 6 ( data_out_VC1 [5:0] $end
$var wire 6 ) data_out_VC0 [5:0] $end
$var wire 6 * data_out_D1 [5:0] $end
$var wire 6 + data_out_D0 [5:0] $end
$var wire 1 , clk $end
$var wire 1 - D1_pop $end
$var wire 1 . D0_pop $end
$scope module final_logic_cond $end
$var wire 1 / reset $end
$var wire 1 0 wr_enable $end
$var wire 1 ! reset_L $end
$var wire 1 " pop_VC1_fifo $end
$var wire 1 # pop_VC0_fifo $end
$var wire 1 1 fulloralmostfull_D1 $end
$var wire 1 2 fulloralmostfull_D0 $end
$var wire 1 3 full_fifo_D1 $end
$var wire 1 4 full_fifo_D0 $end
$var wire 1 $ error_D1 $end
$var wire 1 % error_D0 $end
$var wire 1 & empty_fifo_VC1 $end
$var wire 1 ' empty_fifo_VC0 $end
$var wire 1 5 empty_fifo_D1 $end
$var wire 1 6 empty_fifo_D0 $end
$var wire 6 7 data_out_VC1 [5:0] $end
$var wire 6 8 data_out_VC0 [5:0] $end
$var wire 6 9 data_out_D1 [5:0] $end
$var wire 6 : data_out_D0 [5:0] $end
$var wire 1 , clk $end
$var wire 1 ; almost_empty_fifo_D1 $end
$var wire 1 < almost_empty_fifo_D0 $end
$var wire 1 - D1_pop $end
$var wire 6 = D1_out [5:0] $end
$var wire 1 . D0_pop $end
$var wire 6 > D0_out [5:0] $end
$scope module u_D0_fifo $end
$var wire 1 / reset $end
$var wire 1 0 wr_enable $end
$var wire 1 . rd_enable $end
$var wire 1 4 full_fifo_D0 $end
$var wire 1 % error_D0 $end
$var wire 1 6 empty_fifo_D0 $end
$var wire 6 ? data_in [5:0] $end
$var wire 1 , clk $end
$var wire 1 2 almost_full_fifo_D0 $end
$var wire 1 < almost_empty_fifo_D0 $end
$var reg 3 @ cnt [2:0] $end
$var reg 6 A data_out_D0 [5:0] $end
$var reg 2 B rd_ptr [1:0] $end
$var reg 2 C wr_ptr [1:0] $end
$upscope $end
$scope module u_D1_fifo $end
$var wire 1 / reset $end
$var wire 1 0 wr_enable $end
$var wire 1 - rd_enable $end
$var wire 1 3 full_fifo_D1 $end
$var wire 1 $ error_D1 $end
$var wire 1 5 empty_fifo_D1 $end
$var wire 6 D data_in [5:0] $end
$var wire 1 , clk $end
$var wire 1 1 almost_full_fifo_D1 $end
$var wire 1 ; almost_empty_fifo_D1 $end
$var reg 3 E cnt [2:0] $end
$var reg 6 F data_out_D1 [5:0] $end
$var reg 2 G rd_ptr [1:0] $end
$var reg 2 H wr_ptr [1:0] $end
$upscope $end
$scope module u_arbitro_enrutamiento $end
$var wire 1 2 D0_pause $end
$var wire 1 1 D1_pause $end
$var wire 1 ! reset_L $end
$var wire 1 I pop_delay_VC1 $end
$var wire 1 J pop_delay_VC0 $end
$var wire 1 , clk $end
$var wire 1 " VC1_pop $end
$var wire 1 & VC1_empty $end
$var wire 6 K VC1 [5:0] $end
$var wire 1 # VC0_pop $end
$var wire 1 ' VC0_empty $end
$var wire 6 L VC0 [5:0] $end
$var wire 6 M D1_out [5:0] $end
$var wire 6 N D0_out [5:0] $end
$scope module u_arbitro_muxes $end
$var wire 1 ! reset_L $end
$var wire 1 I pop_delay_VC1 $end
$var wire 1 J pop_delay_VC0 $end
$var wire 1 , clk $end
$var wire 6 O VC1 [5:0] $end
$var wire 1 ' VC0_empty $end
$var wire 6 P VC0 [5:0] $end
$var reg 6 Q D0_out [5:0] $end
$var reg 6 R D1_out [5:0] $end
$upscope $end
$scope module u_logica_pops $end
$var wire 1 2 D0_pause $end
$var wire 1 1 D1_pause $end
$var wire 1 , clk $end
$var wire 1 & VC1_empty $end
$var wire 1 ' VC0_empty $end
$var reg 1 # VC0_pop $end
$var reg 1 " VC1_pop $end
$var reg 1 J pop_delay_VC0 $end
$var reg 1 I pop_delay_VC1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module probador_final_logic $end
$var wire 6 S data_out_D0 [5:0] $end
$var wire 6 T data_out_D1 [5:0] $end
$var wire 1 % error_D0 $end
$var wire 1 $ error_D1 $end
$var wire 1 # pop_VC0_fifo $end
$var wire 1 " pop_VC1_fifo $end
$var reg 1 . D0_pop $end
$var reg 1 - D1_pop $end
$var reg 1 , clk $end
$var reg 6 U data_out_VC0 [5:0] $end
$var reg 6 V data_out_VC1 [5:0] $end
$var reg 1 ' empty_fifo_VC0 $end
$var reg 1 & empty_fifo_VC1 $end
$var reg 1 ! reset_L $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx V
bx U
bx T
b0 S
b0 R
b0 Q
bx P
bx O
b0 N
b0 M
bx L
bx K
0J
0I
bx H
bx G
bx F
bx E
b0 D
bx C
bx B
b0 A
bx @
b0 ?
b0 >
b0 =
x<
x;
b0 :
bx 9
bx 8
bx 7
x6
x5
x4
x3
x2
x1
z0
z/
0.
1-
1,
b0 +
bx *
bx )
bx (
0'
0&
x%
x$
0#
0"
0!
$end
#1
0,
#2
b110110 (
b110110 7
b110110 K
b110110 O
b110110 V
b110100 )
b110100 8
b110100 L
b110100 P
b110100 U
1!
1,
#3
0,
#4
b101100 (
b101100 7
b101100 K
b101100 O
b101100 V
b100101 )
b100101 8
b100101 L
b100101 P
b100101 U
1,
#5
0,
#6
b110100 (
b110100 7
b110100 K
b110100 O
b110100 V
b110100 )
b110100 8
b110100 L
b110100 P
b110100 U
1'
1,
#7
0,
#8
b110101 (
b110101 7
b110101 K
b110101 O
b110101 V
b110110 )
b110110 8
b110110 L
b110110 P
b110110 U
0-
1.
1,
#9
0,
#10
b110100 (
b110100 7
b110100 K
b110100 O
b110100 V
0.
b0 *
b0 9
b0 F
b0 T
bx +
bx :
bx A
bx S
1,
#11
0,
#12
b0 +
b0 :
b0 A
b0 S
b10110 (
b10110 7
b10110 K
b10110 O
b10110 V
b111101 )
b111101 8
b111101 L
b111101 P
b111101 U
1,
#13
0,
#14
1,
#15
0,
#16
1,
